pipeline {
    agent {
      kubernetes {
            label 'jenkins-jenkins-agent'
            defaultContainer 'dind'
        }
    }

    parameters {
        string(name: 'desarrollo', defaultValue: 'develop-backend')
        string(name: 'entorno', defaultValue: 'develop')
        string(name: 'repo', defaultValue: 'reppppppo')
    }

    stages {
        stage('Clonar otro repositorio') {
            steps {
                script {
                    dir('repo') {
                        git branch: 'develop', url: """https://github.com/stemdo-labs/${repo}"""
                    }
                }
            }
        }

        stage('Extraer versión') {
            steps {
                script {
                    dir('repo') {
                        def repoName = env.REPO_NAME ?: sh(script: "echo ${env.GIT_URL} | awk -F'/' '{print \$NF}' | sed 's/.git\$//'", returnStdout: true).trim()
                        echo "Nombre del repositorio: ${repoName}"
                        if (repoName.contains('backend')) {
                            def version = sh(script: "grep -o '<version>[^<]*' pom.xml | sed 's/<version>//' | sed -n '2p'", returnStdout: true).trim()
                            env.VERSION = version
                            echo "Versión (backend): ${version}"
                        } else if (repoName.contains('frontend')) {
                            def json = readJSON file: 'package.json'
                            def version = json.version
                            env.VERSION = version
                            echo "Versión (frontend): ${version}"
                        }
                    }
                }
            }
        }

        stage('Cargar imagen') {
            steps {
                script {
                    def imageName = sh(script: "echo acajas-cr-namespace/${desarrollo}:${version}", returnStdout: true).trim()
                    env.IMAGE_NAME = imageName
                    echo "Image name: ${env.IMAGE_NAME}"
                }
            }
        }

        stage('Construir imagen Docker') {
            steps {
                script {
                    dir('repo') {
                        sh """docker build -t ${imageName} ."""
                    }
                }
            }
        }
    }
}
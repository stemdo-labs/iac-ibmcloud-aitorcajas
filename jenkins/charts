pipeline {
    agent {
      kubernetes {
            label 'jenkins-jenkins-agent'
            defaultContainer 'dind'
        }
    }

    environment {
        APIKEY_IBM_ACAJAS = credentials('APIKEY_IBM_ACAJAS')
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        // stage('Instalar Docker') {
        //     steps {
        //         script {
        //             sh '''
        //                 # Add Docker's official GPG key:
        //                 apt-get update
        //                 apt-get install -y ca-certificates curl
        //                 install -m 0755 -d /etc/apt/keyrings
        //                 curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
        //                 chmod a+r /etc/apt/keyrings/docker.asc

        //                 # Add the repository to Apt sources:
        //                 echo \
        //                     "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
        //                     $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        //                     tee /etc/apt/sources.list.d/docker.list > /dev/null
        //                 apt-get update

        //                 apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        //             '''
        //         }
        //     }
        // }


        // stage('Instalar Helm') {
        //     steps {
        //         sh '''
        //             curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        //             chmod 700 get_helm.sh
        //             ./get_helm.sh
        //         '''
        //     }
        // }

        stage('Comprimir Charts') {
            steps {
                dir('charts') {
                    sh '''
                        helm package ./backend/
                        helm package ./frontend/
                    '''
                }
            }
        }

        stage('Version del Backend') {
            steps {
                script {
                    def version = sh(script: "grep '^version:' charts/backend/Chart.yaml | awk '{print \$2}'", returnStdout: true).trim()
                    env.BACK_VERSION = version
                    echo "Versión del backend: ${env.BACK_VERSION}"
                }
            }
        }

        stage('Version del Frontend') {
            steps {
                script {
                    def version = sh(script: "grep '^version:' charts/frontend/Chart.yaml | awk '{print \$2}'", returnStdout: true).trim()
                    env.FRONT_VERSION = version
                    echo "Versión del frontend: ${env.FRONT_VERSION}"
                }
            }
        }

        stage('Instalar IBM CLI') {
            steps {
                sh 'curl -fsSL https://clis.cloud.ibm.com/install/linux | sh'
            }
        }

        stage('IBM Cloud Login') {
            steps {
                sh '''
                    ibmcloud login --apikey ${APIKEY_IBM_ACAJAS} -r eu-gb
                    ibmcloud target -g Stemdo_Sandbox
                '''
            }
        }

        stage('Instalar Plugin CR') {
            steps {
                sh 'ibmcloud plugin install container-registry'
            }
        }

        stage('Login en IBM Container Registry') {
            steps {
                sh '''
                ibmcloud cr login --client docker
                '''
            }
        }

        stage('Push de los Charts') {
            steps {
                dir('charts') {
                    sh '''
                        helm push backend-${BACK_VERSION}.tgz oci://uk.icr.io/acajas-cr/acajas
                        helm push frontend-${FRONT_VERSION}.tgz oci://uk.icr.io/acajas-cr/acajas
                    '''
                }
            }
        }
    }
}
